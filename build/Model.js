// Generated by CoffeeScript 1.4.0
var PRIVATE_COLLECTION, modelPlugin;

PRIVATE_COLLECTION = require('./constants').PRIVATE_COLLECTION;

modelPlugin = module.exports = function(racer) {
  racer.mixin({
    type: 'Model',
    decorate: function(Model) {
      return Model.dataDescriptor({
        name: 'ServerRequest',
        normalize: function(x) {
          return x;
        },
        isInstance: function(x) {
          return x;
        },
        scopedResult: function(model, descriptor) {
          return model.at(PRIVATE_COLLECTION + descriptor.ns);
        },
        registerFetch: function(model, descriptor) {
          return descriptor.ns;
        },
        subs: function() {
          return [];
        }
      });
    },
    proto: {
      serverRequest: function(ns) {
        return {
          ns: ns,
          arg: Array(arguments).slice(1)
        };
      }
    }
  });
};

modelPlugin.decorate = "racer";

modelPlugin.useWith = {
  server: true,
  browser: true
};
